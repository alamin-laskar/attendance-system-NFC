#include <SPI.h>
#include <MFRC522.h>
#include <ESP8266WiFi.h>
#include <ESP8266HTTPClient.h>
#include <bearssl/bearssl.h>  

#define SS_PIN 2
#define RST_PIN 0

MFRC522 mfrc522(SS_PIN, RST_PIN);

const char* ssid = "Your_SSID";
const char* password = "Your_passwd";
const char* serverURL = "Your_server_url";

const String secretKey = "Your_Secret_key";

String computeSHA256(String message) {
  byte shaResult[32];
  br_sha256_context ctx;

  br_sha256_init(&ctx);
  br_sha256_update(&ctx, message.c_str(), message.length());
  br_sha256_out(&ctx, shaResult);

  String hashString = "";
  for (int i = 0; i < 32; i++) {
    if (shaResult[i] < 0x10) hashString += "0";
    hashString += String(shaResult[i], HEX);
  }

  return hashString;
}

void setup() {
  Serial.begin(115200);
  SPI.begin();
  mfrc522.PCD_Init();

  // Connect to WiFi
  WiFi.begin(ssid, password);
  Serial.print("Connecting to WiFi");
  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.print(".");
  }
  Serial.println("\nWiFi connected.");
}

void loop() {
  if (!mfrc522.PICC_IsNewCardPresent() || !mfrc522.PICC_ReadCardSerial()) {
    return;
  }

  // Read UID
  String uid = "";
  for (byte i = 0; i < mfrc522.uid.size; i++) {
    uid += String(mfrc522.uid.uidByte[i] < 0x10 ? "0" : "");
    uid += String(mfrc522.uid.uidByte[i], HEX);
  }

  // Hash UID + Secret
  String hash = computeSHA256(uid + secretKey);

  Serial.println("UID: " + uid);
  Serial.println("SHA256 Hash: " + hash);

  // Send to server
  if (WiFi.status() == WL_CONNECTED) {
    WiFiClient client;
    HTTPClient http;

    http.begin(client, serverURL);  // âœ… Use WiFiClient here
    http.addHeader("Content-Type", "application/json");

    String jsonPayload = "{\"uid\":\"" + uid + "\", \"hash\":\"" + hash + "\"}";
    int httpCode = http.POST(jsonPayload);

    Serial.print("Server Response Code: ");
    Serial.println(httpCode);

    http.end();
  }

  mfrc522.PICC_HaltA();
  delay(2000);
}
